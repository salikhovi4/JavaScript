// Задание 3 - Дополнительное задание

// Задание:
// Возьмите выполненное предыдущее задание. Сделайте так, чтобы функция создания выпадающего списка могла обрабатывать не только массив объектов,
// но и другие виды входящих значений, а именно:

// Массив примитивных значений типа string или number. В таком случае value и label будут равны. Например: [1, 2, 'три', 'четыре', ...]

// Объект с произвольными свойствами и значениями типа string или number. В таком случае каждый элемент должен формироваться
// из ключа (value) и значения (label) каждого свойства переданного объекта. Например: { value1: 'Значение 1', value2: 'Значение 2', ... }

// Рекомендации к выполнению:
// Есть принцип разработки, который называется "Принцип единой ответственности" или "Single responsibility principle".
// В соответствии с ним, любая сущность в программе должна отвечать за что-то одно и не стараться делать всю работу сразу.
// Соблюдение этого правила делает код программы более понятным для разработчика и легко поддающимся изменениям в будущем.

// Вы уже написали код, который делает своё дело, то есть создаёт выпадающий список со значениями.
// Чтобы научить вашу программу работать с разными форматами входных данных, необязательно усложнять уже существующий код.
// Вы можете создать отдельную функцию, которая преобразует входящие данные в массив объектов для функции из предыдущего задания.
// Помимо выше указанных преимуществ, такой подход позволит вам тестировать работу только этой функции,
// так как функция с прошлого задания должна быть уже протестирована, а её работу вы не изменяете.


function convert(obj) {
    let res = Array();

    if (Array.isArray(obj)) {
        for (let i = 0; i < obj.length; i += 1) {
            if (typeof obj[i] === 'string' || typeof obj[i] === 'number') {
                res.push({
                    value: obj[i],
                    label: obj[i]
                })
            }
        }
    } else {
        let entrs = Object.entries(obj)
        for (let i = 0; i < entrs.length; i += 1) {
            res.push({
                value: entrs[i][0],
                label: entrs[i][1]
            })
        }
    }

    return res
}

let my_obj = {
    '1': 0,
    'lol' : 'kek',
    'hello': 'world',
    'js': 'sucks'
}

// let my_obj = [1, 2, 'три', 'четыре']
console.log(convert(my_obj)); 