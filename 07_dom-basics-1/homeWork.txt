DOM - https://learn.javascript.ru/dom-nodes
Справочник событий - https://developer.mozilla.org/ru/docs/Web/Events
Область применимости defer - https://caniuse.com/script-defer
Справочник по window - https://developer.mozilla.org/ru/docs/Web/API/Window


Задание 1.

Цель задания:
Получить практику работы с DOM-элементами и событиями. Научиться выполнять код с заданной периодичностью.

Задание:
Создайте HTML-страницу с полем для ввода числа, кнопкой и div-элементом с числом 0. В поле для ввода должно вводиться число с
количеством секунд, а кнопка должна запускать таймер. При запуске таймера число в div-элементе должно замениться на
введённое в поле. Затем каждую секунду оно должно уменьшаться на единицу до тех пор, пока не дойдёт до 0. При этом таймер
должен корректно работать, если во время его работы пользователь запускает его заново.

Проверка результата:
При запуске таймера он корректно работает, уменьшая число каждую секунду.
Если нажать на кнопку запуска таймера ещё раз, предыдущий интервал остановится и таймер начнёт свою работу заново.
Таймер заканчивает работу сразу при достижении 0.

Критерии оценки:
Код должен быть простым и понятным, без ненужных усложнений и лишних сущностей.
В setInterval первым параметром передаётся функция (НЕ строка с кодом).

Рекомендации к выполнению:
В JavaScript есть специальный механизм, позволяющий запускать произвольную функцию с заданным интервалом. Для этого есть 2 функции:

setInterval для запуска таймера. Подробнее: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval.
Важно! Хоть функция и позволяет это делать, никогда не передавайте первым параметром строку с кодом! Только функцию.
Код должен быть кодом, а не строкой - так его гораздо проще контролировать.

clearInterval для остановки таймер. Подробнее: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearInterval.
Не бойтесь вызывать clearInterval даже если не уверены, что таймер запущен. В таком случае не будет ошибки, просто ничего не произойдёт.


Задание 2.

Цель задания:
Получить практику создания DOM-элементов из JavaScript.Научиться работать с отложенными вызовами функций.

Задание:
Из JavaScript создайте страницу с полем для ввода и пустым h2-элементом. Введённый в поле текст должен отображаться внутри h2-элемента,
но с задержкой в 300 мс. При этом каждый введённый пользователем в поле символ сбрасывает предыдущий отложенный вызов и
запускает новый. Таким образом программа должна ожидать завершения ввода пользователя и только после этого изменять текст в h2.

Проверка результата:
По ходу ввода текста содержимое в h2 не изменяется. Содержимое обновляется через 300 мс после завершения ввода.

Критерии оценки:
Код должен быть простым и понятным, без ненужных усложнений и лишних сущностей.
В setTimeout первым параметром передаётся функция (НЕ строка с кодом).

Рекомендации к выполнению:
В JavaScript есть специальный механизм, позволяющий запускать произвольную функцию с указанной задержкой. Для этого есть 2 функции:

setTimeout для запуска функции с задержкой. Подробнее: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout.
Важно! Хоть функция и позволяет это делать, никогда не передавайте первым параметром строку с кодом! Только функцию.
Код должен быть кодом, а не строкой - так его гораздо проще контролировать.

clearTimeout для отмены запуска. Подробнее: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearTimeout.
Не бойтесь вызывать clearTimeout даже если не уверены, что запуск функции с задержкой запланирован. В таком случае не будет ошибки,
просто ничего не произойдёт.
